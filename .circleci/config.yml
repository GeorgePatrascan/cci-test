version: 2.1
jobs:
#  BUILD STAGE
  build:
    docker:
      - image: circleci/openjdk:11.0.1-jdk

    working_directory: ~/app-working-dir

    steps:
      # git pull
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: app-working-dir-{{ checksum "pom.xml" }}

#      - run: mvn dependency:go-offline
#      - run: mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline
      - run: mvn -DskipTests clean package dependency:resolve-plugins dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: app-working-dir-{{ checksum "pom.xml" }}

      - run:
          name: Collect jar
          command: |
            mkdir -p ~/jars
            find . -type f -regex ".*/target/.*jar" -exec cp {} ~/jars/ \;
          when: always
      - store_artifacts:
          name: Upload jars
          path: ~/jars
          destination: jars
          when: always

# TEST STAGE
  test:
    docker:
      - image: circleci/openjdk:11.0.1-jdk

    working_directory: ~/app-working-dir

    steps:
      # git pull
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: app-working-dir-{{ checksum "pom.xml" }}

#      - run: mvn dependency:go-offline
      - run: mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: app-working-dir-{{ checksum "pom.xml" }}

      - run: mvn surefire:test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/test-results

      - store_artifacts:
          path: ~/test-results/junit
# DEPLOYMENT STAGE
  deployment:
    docker:
      - image: circleci/openjdk:11.0.1-jdk
    working_directory: ~/app-working-dir
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          key: app-working-dir-{{ checksum "pom.xml" }}
      - run:
          name: Deploy to Package Cloud
          command: mvn -s .circleci.settings.xml -DskipTests deploy

workflows:
  version: 2
#  deployment should happen only for commits tagged by maven release plugin
  build-test:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /^.+\d+\.\d+\.\d+$/
      - test:
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /^.+\d+\.\d+\.\d+$/
          requires:
            - build
#      - deployment:
#          requires:
#            - test
#          filters:
##            branches:
##              only: master
#            tags:
#              only: /^.+\d+\.\d+\.\d+$/
##              only: /^cci-test-\d+\.\d+\.\d+$/

  build-test-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^.+\d+\.\d+\.\d+$/
      - test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^.+\d+\.\d+\.\d+$/
          requires:
            - build
      - deployment:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^.+\d+\.\d+\.\d+$/
          requires:
            - test

#dependencies:
#  override:
#    - mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline

#test:
#  override:
#    - mvn -o surefire:test
#
#deployment:
#  main:
#    branch: master
#    commands:
#      - mvn -s .circleci.settings.xml -DskipTests deploy